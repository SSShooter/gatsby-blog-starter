{"version":3,"sources":["webpack:///./src/components/CommentSubmit.js","webpack:///./src/components/CommentDisplay.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/_core-js@2.6.3@core-js/modules/es6.function.name.js"],"names":["Component","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","allCommentsYaml","edges","site","siteMetadata","title","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","slug","next","_react_16_7_0_react_default","a","createElement","Layout","location","Helmet_default","htmlAttributes","lang","meta","name","content","frontmatter","className","date","tags","Fragment","map","tag","index","key","onClick","navigate","toLowerCase","length","tableOfContents","dangerouslySetInnerHTML","__html","html","style","margin","display","flexWrap","justifyContent","listStyle","padding","gatsby_browser_entry","to","fields","rel","React","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","_this$props","pageName","pageDescript","websiteName","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","textDecoration","color","fontSize","fontWeight","paddingRight","verticalAlign","descript","marginBottom","maxWidth","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-templates-blog-post-js-b882fabf0369b19ca6ea.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Comment extends Component {\r\n  state = {\r\n    submitState: '发送留言',\r\n  }\r\n  submit = () => {\r\n    var xhr = new XMLHttpRequest()\r\n    xhr.open(\r\n      'POST',\r\n      'comment_url',\r\n      true\r\n    )\r\n\r\n    xhr.setRequestHeader('Content-Type', 'application/json')\r\n\r\n    xhr.onreadystatechange = () => {\r\n      if (xhr.readyState == 4) {\r\n        if (xhr.status == 200 || xhr.status == 304) {\r\n          console.log(xhr.responseText)\r\n          this.name.value = ''\r\n          this.email.value = ''\r\n          this.message.value = ''\r\n          alert('留言已发送，将在数分钟后显示')\r\n          this.setState({\r\n            submitState: '已发送',\r\n          })\r\n        } else {\r\n          const response = JSON.parse(xhr.responseText)\r\n          if (response.errorCode) alert(response.errorCode)\r\n          this.button.disabled = false\r\n          this.setState({\r\n            submitState: '发送留言',\r\n          })\r\n        }\r\n      }\r\n    }\r\n    let data = {\r\n      fields: {\r\n        url: this.props.url,\r\n        name: this.name.value,\r\n        email: this.email.value,\r\n        message: this.message.value,\r\n      },\r\n    }\r\n    xhr.send(JSON.stringify(data))\r\n    this.setState({\r\n      submitState: '发送中',\r\n    })\r\n    this.button.disabled = true\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"css-comment-submit\">\r\n        <h3>\r\n          留言<span>（将在数分钟后显示）</span>\r\n        </h3>\r\n        <p>昵称</p>\r\n        <input\r\n          ref={input => (this.name = input)}\r\n          type=\"text\"\r\n          placeholder=\"必填 请输入你的昵称\"\r\n          required\r\n        />\r\n        <p>联系方式</p>\r\n        <input\r\n          ref={input => (this.email = input)}\r\n          type=\"email\"\r\n          placeholder=\"非必填 请输入你的联系方式\"\r\n        />\r\n        <p>留言内容</p>\r\n        <textarea\r\n          ref={input => (this.message = input)}\r\n          placeholder=\"必填 请输入留言内容\"\r\n          required\r\n        />\r\n        <button ref={button => (this.button = button)} onClick={this.submit}>\r\n          {this.state.submitState}\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Comment extends Component {\r\n  render() {\r\n    const date = new Date(this.props.data.date * 1000)\r\n    const dateFormat = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\r\n    return (\r\n      <div className=\"css-comment-display\">\r\n        <div className=\"name\">{this.props.data.name}<span className=\"date\">{dateFormat}</span></div>\r\n        <div className=\"message\">{this.props.data.message}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { Link, graphql, navigate } from 'gatsby'\r\n\r\nimport Bio from '../components/Bio'\r\nimport CommentSubmit from '../components/CommentSubmit'\r\nimport CommentDisplay from '../components/CommentDisplay'\r\nimport Layout from '../components/Layout'\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const comments = this.props.data.allCommentsYaml\r\n      ? this.props.data.allCommentsYaml.edges\r\n      : []\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const siteDescription = post.excerpt\r\n    const { slug, previous, next } = this.props.pageContext\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <Helmet\r\n          htmlAttributes={{ lang: 'zh' }}\r\n          meta={[{ name: 'description', content: siteDescription }]}\r\n          title={`${post.frontmatter.title} | ${siteTitle}`}\r\n        />\r\n        <h1 className=\"css-title\">{post.frontmatter.title}</h1>\r\n        <div className=\"css-info\">\r\n          {post.frontmatter.date}\r\n          {post.frontmatter.tags ? (\r\n            <React.Fragment>\r\n              <span className=\"css-tag\">Tags:</span>\r\n              {post.frontmatter.tags.map((tag, index) => (\r\n                <span\r\n                  key={tag}\r\n                  onClick={() => navigate(`/tag/${tag.toLowerCase()}`)}\r\n                  className=\"css-tag\"\r\n                >\r\n                  {tag}\r\n                  {index + 1 === post.frontmatter.tags.length ? null : ','}\r\n                </span>\r\n              ))}\r\n            </React.Fragment>\r\n          ) : null}\r\n        </div>\r\n        {post.tableOfContents ? (\r\n          <div\r\n            className=\"css-toc\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: '<div>目录</div>' + post.tableOfContents,\r\n            }}\r\n          />\r\n        ) : null}\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr\r\n          style={{\r\n            margin: '3rem 0',\r\n          }}\r\n        />\r\n        {/* {comments.map(comment => (\r\n          <CommentDisplay key={comment.node.id} data={comment.node} />\r\n        ))}\r\n        <CommentSubmit url={slug} /> */}\r\n        <ul\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            listStyle: 'none',\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    allCommentsYaml(filter: { url: { eq: $slug } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          message\r\n          date\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt\r\n      html\r\n      tableOfContents\r\n      frontmatter {\r\n        title\r\n        tags\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport 'prismjs/themes/prism-coy.css'\r\n\r\nimport './global.scss'\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { pageName, pageDescript, title, children } = this.props\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    \r\n    const websiteName = (\r\n      <div>\r\n        <Link\r\n          style={{\r\n            boxShadow: 'none',\r\n            textDecoration: 'none',\r\n            color: 'inherit',\r\n            fontSize: '2rem',\r\n            fontWeight: 200,\r\n            paddingRight: '0.2rem',\r\n          }}\r\n          to={'/'}\r\n        >\r\n          {title}\r\n        </Link>\r\n        {pageName ? (\r\n          <span\r\n            style={{\r\n              verticalAlign: 'top',\r\n            }}\r\n          >\r\n            {'# ' + pageName}\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n    )\r\n    const descript = (\r\n      <div\r\n        style={{\r\n          marginBottom: '3rem',\r\n        }}\r\n      >\r\n        {pageDescript}\r\n      </div>\r\n    )\r\n    return (\r\n      <div\r\n        style={{\r\n          margin: 'auto',\r\n          maxWidth: '672px',\r\n          padding: '1.2rem 3rem',\r\n        }}\r\n      >\r\n        {websiteName}\r\n        {pageDescript ? descript : null}\r\n        {children}\r\n      </div>\r\n      // TODO: add footer\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}